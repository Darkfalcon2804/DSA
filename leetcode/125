////valid palnidrome 125

//////method 1 of solving this
class Solution {
public:
    bool isPalindrome(string s) {
            int st = 0;
    int e = s.size() - 1;

    while (st <= e) {
        
           if(!isalnum(s[st])){
               st++;
           continue;}
         if(!isalnum(s[e])){
             e--;
         continue;
         }
         
        if (toupper(s[st]) != toupper(s[e])) {//////new concept toupper or tolower  for which I was making function is directly available     
            return false;
        }
        st++;
        e--;
    }
    return true;

    }
};
////method 2->This is also one method but it giving more runtime 
// class Solution {
// public: 
// bool valid (char ch){
//     if((ch>='a' && ch<='z')||(ch>='A'&&ch<='Z')||(ch>='0'&&ch<='9')){return 1;}
//     return 0;
// }
// bool palindrome1(string a){
//     int s=0;
//     int e=a.length()-1;
//     while(s<=e){
//         if(a[s]!=a[e]){
//             return false;
//         }     
//         else{
//             s++;
//             e--;
//         }
//     }
//     return true;
//  }




// bool isPalindrome(string s){
//     string temp="";
//     for(int j=0;j<s.length();j++){
//         if(valid(s[j])){temp.push_back(s[j]);}
//     }
//     for(int j=0;j<temp.length();j++){
//         temp[j]=tolower(temp[j]);
//     }
//     return palindrome1(temp);
// }
// };
